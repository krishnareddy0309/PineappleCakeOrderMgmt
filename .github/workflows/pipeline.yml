name: ServiceNow GitHub Actions Demo

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    # Purpose of this job is to Apply Remote Changes for the branch triggering 
    # the pipeline build to the Dev instance, then publish the application to 
    # app repo using the template versioning format. 
    name: Publish from Dev
    runs-on: ubuntu-latest
    # Below line can be used to set conditionals for modifying your pipeline as needed.
    #  if: ${{ github.event_name == 'pull_request'}}

    steps:

      - name: ServiceNow CI/CD Apply Changes
        uses: ServiceNow/sncicd-apply-changes@2.0.0
        env:
          snowUsername: ${{ secrets.SN_KRISHNA }}
          snowPassword: ${{ secrets.SN_KRISHNAP }}
          snowSourceInstance: ${{ secrets.SN_DEV_INSTANCE }}
          appSysID: ${{ secrets.SN_APP_SYSID }}
          branch: 'master'

      - name: ServiceNow CI/CD Publish App
        id: publish_app
        uses: ServiceNow/sncicd-publish-app@2.0.0
        with:
          versionTemplate: 8.8
          versionFormat: template
        env:
          snowUsername: ${{ secrets.SN_KRISHNA }}
          snowPassword: ${{ secrets.SN_KRISHNAP }}
          snowSourceInstance: ${{ secrets.SN_DEV_INSTANCE }}
          appSysID: ${{ secrets.SN_APP_SYSID }}
          
    # This is required to pass the version number output from Publish App 
    # to the input for Install App in the next job! This is because the jobs 
    # run on different Linux instances, so without this Install App won't know
    # what to install.
    outputs:
      publishversion: ${{ steps.publish_app.outputs.newVersion }}

  test:
    # Purpose of this job is to Install App from the app repo for the version 
    # published in the build job to a Test instance, then run an ATF Test Suite 
    # associated with the app. If Test Suite fails, the app should be Rolled Back 
    # to clean up the persistent Test environment. 
    needs: build
    name: Run ATF in Test
    runs-on: ubuntu-latest
    # Below line can be used to set conditionals for modifying your pipeline as needed.
    # if: ${{ github.event_name == 'pull_request'}}
    
    steps:

      - name: ServiceNow CI/CD Install App
        id: install_app
        uses: ServiceNow/sncicd-install-app@1.0.0
        with:
          version: ${{ needs.build.outputs.publishversion }}
        env:
          snowUsername: ${{ secrets.SN_DEV }}
          snowPassword: ${{ secrets.SN_DEVP }}
          snowInstallInstance: ${{ secrets.SN_TEST_INSTANCE }}
          appSysID: ${{ secrets.SN_APP_SYSID }}

      - name: ServiceNow CI/CD Run ATF Test Suite
        uses: ServiceNow/sncicd-tests-run@1.0.0
        with:
          testSuiteSysId: ${{ secrets.SN_ATFTESTSUITE_SYSID }}
        env:
          snowUsername: ${{ secrets.SN_DEV  }}
          snowPassword: ${{ secrets.SN_DEVP }}
          snowInstallInstance: ${{ secrets.SN_TEST_INSTANCE }}

      - name: ServiceNow CI/CD Rollback App
        if: ${{ failure() && steps.install_app.outputs.rollbackVersion }}
        uses: ServiceNow/sncicd-rollback-app@1.0.0
        with:
          version: ${{steps.install_app.outputs.rollbackVersion}}
        env:
          snowUsername: ${{ secrets.SN_DEV }}
          snowPassword: ${{ secrets.SN_DEVP }}
          snowInstallInstance: ${{ secrets.SN_TEST_INSTANCE }}
          appSysID: ${{ secrets.SN_APP_SYSID }}

    # This is required to pass the version number output from Publish App 
    # to the input for Install App in the next job! This is because the jobs 
    # run on different Linux instances, so without this Install App won't know
    # what to install.
    outputs:
      publishversion: ${{ needs.build.outputs.publishversion }}
